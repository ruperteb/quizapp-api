// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id
  email       String     @unique
  name        String
  roles       Role[]
  userQuizzes UserQuiz[]
  quizzes     Quiz[]
  questions   Question[]
}

model Role {
  id     Int     @id @default(autoincrement())
  role   String
  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Quiz {
  id            Int            @id @default(autoincrement())
  title         String
  createdAt     DateTime
  userQuizzes   UserQuiz[]
  quizQuestions QuizQuestion[]
  createdBy     User?          @relation(fields: [userId], references: [id])
  userId        String?
}

model UserQuiz {
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  quiz       Quiz     @relation(fields: [quizId], references: [id])
  quizId     Int
  assignedAt DateTime

  userAnswers UserAnswer[]
  @@id([userId, quizId])
}

model Question {
  id            Int            @id @default(autoincrement())
  description   String
  correctAnswer String
  createdAt     DateTime
  quizQuestions QuizQuestion[]
  createdBy     User?          @relation(fields: [userId], references: [id])
  userId        String?
}

model QuizQuestion {
  quiz        Quiz         @relation(fields: [quizId], references: [id])
  quizId      Int
  question    Question     @relation(fields: [questionId], references: [id])
  questionId  Int
  userAnswers UserAnswer[]
  assignedAt  DateTime

  @@id([quizId, questionId])
}

model UserAnswer {
  userQuiz     UserQuiz     @relation(fields: [userId, quizId], references: [userId, quizId])
  userId       String
  quizId       Int
  quizQuestion QuizQuestion @relation(fields: [quizId, questionId], references: [quizId, questionId])
  questionId   Int
  userAnswer   String
  answeredAt   DateTime

  @@id([userId, quizId, questionId])
}
